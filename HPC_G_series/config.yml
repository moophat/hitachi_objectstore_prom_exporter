##########################################
# Hitachi Content Platform Prometheus exporter
##########################################
# Port run exporter
port: 8000

# Host run in exporter
host: 0.0.0.0

# Enable debug logging for exporter
debug: false

# Default: /var/log/hitachi_content_platform.log
log_file: "/var/log/hitachi_content_platform.log"

# Hitachi Content Platform API destination
base_url: "https://10.1.22.161:9090"

# timeout for request from exporter to node G
timeout: 2

# Declare the api endpoints need to be access
endpoints:
  api1: "/mapi/nodes/statistics"
  api2: "/mapi/tenants/<tenant-user>"
  api3: "/mapi/tenants/<tenant-user>/statistics"
  api4: "/mapi/services/statistics"
  api5: "/mapi/tenants/<tenant-user>/namespaces/<namespace>/statistics"
  api6: "/mapi/tenants/<tenant-user>/namespaces/<namespace>"

# Declare the Authorization
Authorization: "HCP YWRtaW4=:0e7517141fb53f21ee439b355b5a1d0a"

# Declare the metrics need to be collect in variable metrics
metrics:
  - metric_name: "cpu_user"
    api_endpoint: api1
    metric_path: "/nodeStatistics/nodes/node/cpuUser"
    labels:
      - label_name: "node"
        label_path: "ancestor::node/backendIpAddress"
  - metric_name: "cpu_system"
    api_endpoint: api1
    metric_path: "/nodeStatistics/nodes/node/cpuSystem"
    labels:
      - label_name: "node"
        label_path: "ancestor::node/backendIpAddress"
  - metric_name: "cpu_max"
    api_endpoint: api1
    metric_path: "/nodeStatistics/nodes/node/cpuMax"
    labels:
      - label_name: "node"
        label_path: "ancestor::node/backendIpAddress"
  - metric_name: "io_wait"
    api_endpoint: api1
    metric_path: "/nodeStatistics/nodes/node/ioWait"
    labels:
      - label_name: "node"
        label_path: "ancestor::node/backendIpAddress"
  - metric_name: "swap_out"
    api_endpoint: api1
    metric_path: "/nodeStatistics/nodes/node/swapOut"
    labels:
      - label_name: "node"
        label_path: "ancestor::node/backendIpAddress"
  - metric_name: "block_read"
    api_endpoint: api1
    metric_path: "/nodeStatistics/nodes/node/volumes/volume/blocksRead"
    labels:
      - label_name: "node"
        label_path: "ancestor::node/backendIpAddress"
      - label_name: "volume_id"
        label_path: "ancestor::volume/id"
  - metric_name: "block_written"
    api_endpoint: api1
    metric_path: "/nodeStatistics/nodes/node/volumes/volume/blocksWritten"
    labels:
      - label_name: "node"
        label_path: "ancestor::node/backendIpAddress"
      - label_name: "volume_id"
        label_path: "ancestor::volume/id"
  - metric_name: "disk_utilization"
    api_endpoint: api1
    metric_path: "/nodeStatistics/nodes/node/volumes/volume/diskUtilization"
    labels:
      - label_name: "node"
        label_path: "ancestor::node/backendIpAddress"
      - label_name: "volume_id"
        label_path: "ancestor::volume/id"
  - metric_name: "transfer_speed"
    api_endpoint: api1
    metric_path: "/nodeStatistics/nodes/node/volumes/volume/transferSpeed"
    labels:
      - label_name: "node"
        label_path: "ancestor::node/backendIpAddress"
      - label_name: "volume_id"
        label_path: "ancestor::volume/id"
  - metric_name: "total_bytes"
    api_endpoint: api1
    metric_path: "/nodeStatistics/nodes/node/volumes/volume/totalBytes"
    labels:
      - label_name: "node"
        label_path: "ancestor::node/backendIpAddress"
      - label_name: "volume_id"
        label_path: "ancestor::volume/id"
  - metric_name: "free_bytes"
    api_endpoint: api1
    metric_path: "/nodeStatistics/nodes/node/volumes/volume/freeBytes"
    labels:
      - label_name: "node"
        label_path: "ancestor::node/backendIpAddress"
      - label_name: "volume_id"
        label_path: "ancestor::volume/id"
  - metric_name: "max_front_end_bandwidth"
    api_endpoint: api1
    metric_path: "/nodeStatistics/nodes/node/maxFrontEndBandwidth"
    labels:
      - label_name: "node"
        label_path: "ancestor::node/backendIpAddress"
  - metric_name: "front_end_bytes_read"
    api_endpoint: api1
    metric_path: "/nodeStatistics/nodes/node/frontEndBytesRead"
    labels:
      - label_name: "node"
        label_path: "ancestor::node/backendIpAddress"
  - metric_name: "front_end_bytes_written"
    api_endpoint: api1
    metric_path: "/nodeStatistics/nodes/node/frontEndBytesWritten"
    labels:
      - label_name: "node"
        label_path: "ancestor::node/backendIpAddress"
  - metric_name: "max_back_end_bandwidth"
    api_endpoint: api1
    metric_path: "/nodeStatistics/nodes/node/maxBackEndBandwidth"
    labels:
      - label_name: "node"
        label_path: "ancestor::node/backendIpAddress"
  - metric_name: "back_end_bytes_read"
    api_endpoint: api1
    metric_path: "/nodeStatistics/nodes/node/backEndBytesRead"
    labels:
      - label_name: "node"
        label_path: "ancestor::node/backendIpAddress"
  - metric_name: "back_end_bytes_written"
    api_endpoint: api1
    metric_path: "/nodeStatistics/nodes/node/backEndBytesWritten"
    labels:
      - label_name: "node"
        label_path: "ancestor::node/backendIpAddress"
  - metric_name: "soft_quota"
    api_endpoint: api2
    metric_path: "/tenant/softQuota"
    labels: []
  # - metric_name: "soft_quota"
  #   api_endpoint: api2
  #   metric_path: "/tenant/softQuota"
  #   labels:
  #     - label_name: "name"
  #       label_path: "ancestor::tenant/name"
  - metric_name: "hard_quota"
    api_endpoint: api2
    metric_path: "/tenant/hardQuota"
    labels: []
  - metric_name: "namespace_quota"
    api_endpoint: api2
    metric_path: "/tenant/namespaceQuota"
    labels: []
  - metric_name: "compressed_count"
    api_endpoint: api3
    metric_path: "/statistics/compressedCount"
    labels: []
  - metric_name: "compressed_saved_size"
    api_endpoint: api3
    metric_path: "/statistics/compressedSavedSize"
    labels: []
  - metric_name: "custom_metadata_count"
    api_endpoint: api3
    metric_path: "/statistics/customMetadataCount"
    labels: []
  - metric_name: "custom_metadata_size"
    api_endpoint: api3
    metric_path: "/statistics/customMetadataSize"
    labels: []
  - metric_name: "erasure_coded_count"
    api_endpoint: api3
    metric_path: "/statistics/erasureCodedCount"
    labels: []
  - metric_name: "erasure_coded_size"
    api_endpoint: api3
    metric_path: "/statistics/erasureCodedSize"
    labels: []
  - metric_name: "ingested_volume"
    api_endpoint: api3
    metric_path: "/statistics/ingestedVolume"
    labels: []
  - metric_name: "object_count"
    api_endpoint: api3
    metric_path: "/statistics/objectCount"
    labels: []
  - metric_name: "shred_count"
    api_endpoint: api3
    metric_path: "/statistics/shredCount"
    labels: []
  - metric_name: "shred_size"
    api_endpoint: api3
    metric_path: "/statistics/shredSize"
    labels: []
  - metric_name: "storage_capacity_used"
    api_endpoint: api3
    metric_path: "/statistics/storageCapacityUsed"
    labels: []
  - metric_name: "state"
    api_endpoint: api4
    metric_path: "/serviceStatistics/nodes/node/services/service/state"
    labels:
      - label_name: "node"
        label_path: "ancestor::node/ipAddress"
      - label_name: "service"
        label_path: "ancestor::service/name"
  - metric_name: "start_time"
    api_endpoint: api4
    metric_path: "/serviceStatistics/nodes/node/services/service/startTime"
    labels:
      - label_name: "node"
        label_path: "ancestor::node/ipAddress"
      - label_name: "service"
        label_path: "ancestor::service/name"
  - metric_name: "end_time"
    api_endpoint: api4
    metric_path: "/serviceStatistics/nodes/node/services/service/endTime"
    labels:
      - label_name: "node"
        label_path: "ancestor::node/ipAddress"
      - label_name: "service"
        label_path: "ancestor::service/name"
  - metric_name: "objects_examined"
    api_endpoint: api4
    metric_path: "/serviceStatistics/nodes/node/services/service/objectsExamined"
    labels:
      - label_name: "node"
        label_path: "ancestor::node/ipAddress"
      - label_name: "service"
        label_path: "ancestor::service/name"
  - metric_name: "objects_examined_per_second"
    api_endpoint: api4
    metric_path: "/serviceStatistics/nodes/node/services/service/objectsExaminedPerSecond"
    labels:
      - label_name: "node"
        label_path: "ancestor::node/ipAddress"
      - label_name: "service"
        label_path: "ancestor::service/name"
  - metric_name: "objects_serviced"
    api_endpoint: api4
    metric_path: "/serviceStatistics/nodes/node/services/service/objectsServiced"
    labels:
      - label_name: "node"
        label_path: "ancestor::node/ipAddress"
      - label_name: "service"
        label_path: "ancestor::service/name"
  - metric_name: "objects_serviced_per_second"
    api_endpoint: api4
    metric_path: "/serviceStatistics/nodes/node/services/service/objectsServicedPerSecond"
    labels:
      - label_name: "node"
        label_path: "ancestor::node/ipAddress"
      - label_name: "service"
        label_path: "ancestor::service/name"
  - metric_name: "objects_unable_to_service"
    api_endpoint: api4
    metric_path: "/serviceStatistics/nodes/node/services/service/objectsUnableToService"
    labels:
      - label_name: "node"
        label_path: "ancestor::node/ipAddress"
      - label_name: "service"
        label_path: "ancestor::service/name"
  - metric_name: "objects_unable_to_service_per_second"
    api_endpoint: api4
    metric_path: "/serviceStatistics/nodes/node/services/service/objectsUnableToServicePerSecond"
    labels:
      - label_name: "node"
        label_path: "ancestor::node/ipAddress"
      - label_name: "service"
        label_path: "ancestor::service/name"
  - metric_name: "compressed_count_namespace"
    api_endpoint: api5
    metric_path: "/statistics/compressedCount"
    labels: []
  - metric_name: "compressed_saved_size_namespace"
    api_endpoint: api5
    metric_path: "/statistics/compressedSavedSize"
    labels: []
  - metric_name: "custom_metadata_count_namespace"
    api_endpoint: api5
    metric_path: "/statistics/customMetadataCount"
    labels: []
  - metric_name: "custom_metadata_size_namespace"
    api_endpoint: api5
    metric_path: "/statistics/customMetadataSize"
    labels: []
  - metric_name: "erasure_coded_count_namespace"
    api_endpoint: api5
    metric_path: "/statistics/erasureCodedCount"
    labels: []
  - metric_name: "erasure_coded_size_namespace"
    api_endpoint: api5
    metric_path: "/statistics/erasureCodedSize"
    labels: []
  - metric_name: "ingested_volume_namespace"
    api_endpoint: api5
    metric_path: "/statistics/ingestedVolume"
    labels: []
  - metric_name: "object_count_namespace"
    api_endpoint: api5
    metric_path: "/statistics/objectCount"
    labels: []
  - metric_name: "shred_count_namespace"
    api_endpoint: api5
    metric_path: "/statistics/shredCount"
    labels: []
  - metric_name: "shred_size_namespace"
    api_endpoint: api5
    metric_path: "/statistics/shredSize"
    labels: []
  - metric_name: "storage_capacity_used_namespace"
    api_endpoint: api5
    metric_path: "/statistics/storageCapacityUsed"
    labels: []
  - metric_name: "hard_quota_namespace"
    api_endpoint: api6
    metric_path: "/namespace/hardQuota"
    labels: []
  - metric_name: "soft_quota_namespace"
    api_endpoint: api6
    metric_path: "/namespace/softQuota"
    labels: []